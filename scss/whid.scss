$major-orange: rgb(255, 210, 148);
$major-cyan: rgb(163, 239, 247);
$major-pink: rgb(252, 174, 207);
$major-purple: rgb(189, 166, 255);

$primary: $major-orange !default;

@import "../scss/darkly/variables";
@import "../bootstrap/scss/bootstrap";

// scss-docs-start btn-text-variant
@mixin button-text-variant(
  $color,
  $color-hover: $color,
  $active-background: rgba($color, .1),
  $active-border: transparent,
  $active-color: $white
) {
  color: $white;
  border-color: transparent;


  .btn-check:focus + &,
  &:focus {
    box-shadow: 0 0 0 $btn-focus-width rgba($color, .5);
  }

  .btn-check:checked + &,
  .btn-check:active + &,
  &:active,
  &.active,
  &.dropdown-toggle.show {
    color: $active-color;
    background-color: $active-background;
    border-color: $active-border;

    &:focus {
      @if $enable-shadows {
        @include box-shadow($btn-active-box-shadow, 0 0 0 $btn-focus-width rgba($color, .5));
      } @else {
        // Avoid using mixin so we can pass custom focus shadow properly
        box-shadow: 0 0 0 $btn-focus-width rgba($color, .5);
      }
    }
  }

  &:hover {
    color: $color-hover;
    background-color: $active-background;
    border-color: $active-border;
  }

  &:disabled,
  &.disabled {
    color: $color;
    background-color: transparent;
  }
}
// scss-docs-end btn-text-variant


// scss-docs-start btn-text-loops
@each $color, $value in $theme-colors {
    .btn-text-#{$color} {
        @include button-text-variant($value);
    }
}
// scss-docs-end btn-text-loops

@import "../scss/darkly/bootswatch";
